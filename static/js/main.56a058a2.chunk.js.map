{"version":3,"sources":["components/RecipeDetails.js","components/Recipe.js","components/Alert.js","App.js","index.js"],"names":["RecipeDetails","ingredients","map","ingredient","key","uuidv4","className","text","Recipe","recipe","useState","show","setShow","label","image","url","src","alt","href","target","rel","onClick","Alert","alert","App","query","setQuery","recipes","setRecipes","setAlert","getData","a","Axios","get","result","data","more","console","log","hits","onSubmit","e","preventDefault","type","value","placeholder","autoComplete","onChange","ReactDOM","render","document","getElementById"],"mappings":"kPAceA,EAXO,SAAC,GACrB,OADyC,EAAlBC,YACJC,KAAI,SAAAC,GACrB,OACE,wBAAIC,IAAKC,eAAUC,UAAU,mBAC3B,wBAAIA,UAAU,mBAAmBH,EAAWI,WCarCC,EAjBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACLC,oBAAS,GADJ,mBACtBC,EADsB,KAChBC,EADgB,OAEcH,EAAOA,OAA1CI,EAFqB,EAErBA,MAAOC,EAFc,EAEdA,MAAOC,EAFO,EAEPA,IAAKd,EAFE,EAEFA,YAE3B,OACE,yBAAKK,UAAU,UACb,4BAAKO,GACL,yBAAKG,IAAKF,EAAOG,IAAKJ,IACtB,uBAAGK,KAAMH,EAAKI,OAAO,SAASC,IAAI,uBAAlC,eAGA,4BAAQC,QAAS,kBAAMT,GAASD,KAAhC,eACCA,GAAQ,kBAAC,EAAD,CAAeV,YAAaA,MCL5BqB,EARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,yBAAKjB,UAAU,SACb,4BAAKiB,K,iBCoEIC,G,MAlEL,WAAM,IAAD,EACYd,mBAAS,IADrB,mBACPe,EADO,KACAC,EADA,OAEiBhB,mBAAS,IAF1B,mBAENiB,EAFM,KAEGC,EAFH,OAGalB,mBAAS,IAHtB,mBAGNa,EAHM,KAGCM,EAHD,KAaPd,EAAI,mCAAD,OAAoCU,EAApC,mBARI,WAQJ,oBAPK,oCASRK,EAAO,uCAAG,4BAAAC,EAAA,yDACA,KAAVN,EADU,iCAESO,IAAMC,IAAIlB,GAFnB,WAENmB,EAFM,QAGAC,KAAKC,KAHL,yCAIHP,EAAS,iEAJN,OAMZQ,QAAQC,IAAIJ,GACZN,EAAWM,EAAOC,KAAKI,MACvBb,EAAS,IACTG,EAAS,IATG,wBAWZA,EAAS,+BAXG,4CAAH,qDAqBb,OACE,6BACE,yBAAKvB,UAAU,OACb,wDACA,0BAAMA,UAAU,cAAckC,SATnB,SAAAC,GACfA,EAAEC,iBACFZ,MAQe,KAAVP,GAAgB,kBAAC,EAAD,CAAOA,MAAOA,IAC7B,2BACEoB,KAAK,OACLC,MAAOnB,EACPoB,YAAa,0CACbC,aAAa,MACbC,SAlBO,SAAAN,GAAC,OAAIf,EAASe,EAAEtB,OAAOyB,UAqBlC,2BAAOD,KAAK,SAASC,MAAM,YAE3B,yBAAKtC,UAAU,WACdqB,IAAY,IACXA,EAAQzB,KAAI,SAAAO,GAAM,OAAI,kBAAC,EAAD,CAAQL,IAAKC,eAAUI,OAAQA,YCzD/DuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.56a058a2.chunk.js","sourcesContent":["import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst RecipeDetails = ({ ingredients }) => {\n  return ingredients.map(ingredient => {\n    return (\n      <ul key={uuidv4()} className=\"ingredient-list\">\n        <li className=\"ingredient-text\">{ingredient.text}</li>\n        {/* <li className=\"ingredient-weight\">Quantity - {ingredient.weight}, {ingredient.dishType}</li> */}\n      </ul>\n    );\n  });\n};\n\nexport default RecipeDetails;","import React, { useState } from \"react\";\nimport RecipeDetails from \"./RecipeDetails\";\n\nconst Recipe = ({ recipe }) => {\n  const [show, setShow] = useState(false);\n  const { label, image, url, ingredients } = recipe.recipe;\n\n  return (\n    <div className=\"recipe\">\n      <h2>{label}</h2>\n      <img src={image} alt={label} />\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        Recipe Link\n      </a>\n      <button onClick={() => setShow(!show)}>Ingredients</button>\n      {show && <RecipeDetails ingredients={ingredients} />}\n    </div>\n  );\n};\n\nexport default Recipe;","import React from \"react\";\n\nconst Alert = ({ alert }) => {\n  return (\n    <div className=\"alert\">\n      <h3>{alert}</h3>\n    </div>\n  );\n};\n\nexport default Alert;","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from \"uuid\";\nimport Recipe from \"./components/Recipe\";\nimport Alert from \"./components/Alert\";\nimport Axios from \"axios\";\nimport './App.css';\n\nconst App=() =>{\n  const[query, setQuery] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [alert, setAlert] = useState(\"\");\n\n  const APP_ID=\"f57e7a64\";\n  const APP_KEY=\"6d8a60405bebea5ea56356fa7f5cfcd3\";\n\n  // Spoonacular API Key: d459fd2233444a70a4fe0a4796ad420c\n  // GET https://api.spoonacular.com/recipes/complexSearch\n\n\n\n  const url=`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n  \n  const getData = async () => {\n    if (query !== \"\") {\n      const result = await Axios.get(url);\n      if (!result.data.more) {\n        return setAlert(\"can't find a food with that ingredient or one with that name\");\n      }\n      console.log(result);\n      setRecipes(result.data.hits);\n      setQuery(\"\");\n      setAlert(\"\");\n    } else {\n      setAlert(\"Try searching for chocolate\");\n    }\n  };\n  const onChange = e => setQuery(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getData();\n  };\n\n  return (\n    <div>\n      <div className=\"App\">\n        <h1>Ingredient Searching App</h1>\n        <form className=\"search-form\" onSubmit={onSubmit}>\n        {alert !== \"\" && <Alert alert={alert} />}\n          <input\n            type=\"text\"\n            value={query}\n            placeholder =\"Search via ingredients or a recipe name\" \n            autoComplete=\"off\" \n            onChange={onChange}  \n          />\n\n        <input type=\"submit\" value=\"Search\" />\n        </form>\n        <div className=\"recipes\">\n        {recipes !== [] &&\n          recipes.map(recipe => <Recipe key={uuidv4()} recipe={recipe} />)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\n\n// \"https://api.edamam.com/search?q=chicken&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&from=0&to=3&calories=591-722&health=alcohol-free\"\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}